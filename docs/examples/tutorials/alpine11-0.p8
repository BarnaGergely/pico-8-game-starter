pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
--alpine ascent
--by tyler r. davis
--version 1.1
--game loop
g={
--globals
	grav=0.2
}
timer=0
counter=0
anim_timer=0

function _init()
		scene="menu"
	bg_x=0
	bg_y=0
	bg_color=12
	
	
end

function _update()
	if scene=="menu" then
		update_menu()
	elseif scene=="start" then
		scene="game"
		music(0)
		map_setup()
		player_setup()
		camera_init()
		
		--testing
		--p.x=96*8
 	--p.y=4*8
 	--camx=96*8
 	--camy=0
 	
 	scene="game"
	
	elseif scene=="game" then
		update_player()
		camera_update()
		coins_update()
		counter+=1
		if counter==30 and not winflag.collected then
			counter=0
			timer+=1
		end
	end
end

function _draw()
	if scene=="game" then
		draw_map()
		draw_coins()
		draw_player()
		pal(5,5,0)
		pal(6,6,0)
		rectfill(camx+1,camy+120,camx+128,camy+127,5)
		rectfill(camx+1,camy+120,camx+p.maxstam,camy+127,0)
		rectfill(camx+1,camy+120,camx+p.stam,camy+127,3)
		if (magma_collide())	rectfill((camx+p.stam),camy+120,camx+p.stam,camy+127,8)
		score_string=tostr(p.score+p.coin_score)..""..minutes(timer)
		rect(camx+0,camy+120,camx+127,camy+127,7)
		line(camx+14,camy+120,camx+14,camy+127,7)
		line(camx+28,camy+120,camx+28,camy+127,7)
		line(camx+42,camy+120,camx+42,camy+127,7)
		line(camx+56,camy+120,camx+56,camy+127,7)
		line(camx+70,camy+120,camx+70,camy+127,7)
		line(camx+84,camy+120,camx+84,camy+127,7)
		line(camx+98,camy+120,camx+98,camy+127,7)
		line(camx+112,camy+120,camx+112,camy+127,7)
		rectfill(camx,camy+113,camx+32,camy+119,0)
		print("🅾️:",camx+1, camy+114,3)
		circ(camx+15,camy+116,2,3)
		circ(camx+22,camy+116,2,3)
		circ(camx+29,camy+116,2,3)
		if (p.stamcoin>0) circfill(camx+15,camy+116,2,3)
		if (p.stamcoin>1) circfill(camx+22,camy+116,2,3)
		if (p.stamcoin>2) circfill(camx+29,camy+116,2,3)
		rectfill((camx+(16*8)-(#score_string*4))-1,camy+113,camx+128,camy+119,0)	
		print(score_string, camx+(16*8)-(#score_string*4), camy+114,7)
		pal(5,pal5,0)
		pal(6,pal6,0)
	
		if winflag.collected then
		print('you sent it!',(camx+64-(12*2))+1,(7*8),0)
		print('you sent it!',camx+64-(12*2),7*8,10)
		print('score:'..p.score+p.coin_score,(camx+64-(12*2))+1,(11*8),0)
		print('score:'..p.score+p.coin_score,camx+64-(12*2),11*8,10)
		print('time:'..minutes(timer),(camx+64-(12*2))+1,(12*8),0)
		print('time:'..minutes(timer),camx+64-(12*2),12*8,10)
		if p.no_green_coins then
			print('without using green coins',(camx+64-(25*2))+1,(8*8),0)
			print('without using green coins',camx+64-(25*2),8*8,10)	
		end
		if p.never_fell then
			print('without falling',(camx+64-(15*2))+1,(9*8),0)
			print('without falling',camx+64-(15*2),9*8,10)	
		end
		if p.all_coins then
			print('and collected all coins',(camx+64-(23*2))+1,(10*8),0)
			print('and collected all coins',camx+64-(23*2),10*8,10)	
		else if p.no_gold_coins then
			print('without gold coins',(camx+64-(18*2))+1,(10*8),0)
			print('without gold coins',camx+64-(18*2),10*8,10)	
		end
	end
	end
	end

end	
-->8
--map code
function map_setup()
	solid=0
	climbable=1
	magma=2
	ice=3
	coin=4
	stamcoin=5
	bumper=6
	obsidian=7
	
	bg_x=0
	bg_y=0
	bg_color=12
	pal5=5
	pal6=6
	
end

function draw_map()
	anim_timer+=1
	cls(bg_color)
	map(112,0,bg_x,bg_y,128,512)
	map(0,0,0,0,128,64)
	if camx>383 then
		for x=0,127 do
			for y=0,64 do
				tile=mget(x,y)
				flag=fget(tile,magma)
				if flag then
					--print('flagged!',camx+10, camy+10,0)
					if anim_timer%15==0 then
						if tile==29 then
						 mset(x,y,45)
						elseif tile==45 then
					 	mset(x,y,29)
						elseif tile==30 then
						 mset(x,y,46)
						elseif tile==46 then
						 mset(x,y,30)
						elseif tile==11 then
						 mset(x,y,12)
						elseif tile==12 then
						 mset(x,y,11)
						end
					end
				end
			end
	end
	end
end

function coins_update()
 animate_item(coin1, 36, 38)
 coin_collect(coin1)
 animate_item(coin2, 36, 38)
 coin_collect(coin2)
 animate_item(coin3, 36, 38)
 coin_collect(coin3)
 animate_item(coin4, 36, 38)
 coin_collect(coin4)
 animate_item(coin5, 36, 38)
 coin_collect(coin5)
 animate_item(coin6, 36, 38)
 coin_collect(coin6)
 animate_item(stam_coin1, 20, 22)
 stam_collect(stam_coin1)
 animate_item(stam_coin2, 20, 22)
 stam_collect(stam_coin2)
 stam_collect(stam_coin3)
 animate_item(stam_coin3, 20, 22)
 stam_collect(stam_coin4)
 animate_item(stam_coin4, 20, 22)
 stam_collect(stam_coin5)
 animate_item(stam_coin5, 20, 22)
 stam_collect(stam_coin6)
 animate_item(stam_coin6, 20, 22)
 stam_collect(stam_coin7)
 animate_item(stam_coin7, 20, 22)
 stam_collect(stam_coin8)
 animate_item(stam_coin8, 20, 22)
 stam_collect(stam_coin9)
 animate_item(stam_coin9, 20, 22)
 stam_collect(stam_coin10)
 animate_item(stam_coin10, 20, 22)
 stam_collect(stam_coin11)
 animate_item(stam_coin11, 20, 22)
 stam_collect(stam_coin12)
 animate_item(stam_coin12, 20, 22)
 
end

function coin_collect(coin)
	if intersects_box_box(coin.x,coin.y,8,8,p.x,p.y,8,8) then
  if not coin.collected then
   p.maxstam+=14
  	coin.collected=true
  	sfx(3)
  	p.coin_score+=100
  end
 end
end
 
function stam_collect(coin)
	if intersects_box_box(coin.x,coin.y,8,8,p.x,p.y,8,8) then
  if not coin.collected then
  	if (p.stamcoin<3) p.stamcoin+=1
  	coin.collected=true
  	sfx(3)
  	p.coin_score+=100
  
  end
  
 end
end

function reset_stam_coins()

end

function draw_coins()
	if (not coin1.collected) spr(coin1.sprite,coin1.x,coin1.y,1,1,true)
	if (not coin2.collected) spr(coin2.sprite,coin2.x,coin2.y,1,1,true)
	if (not coin3.collected) spr(coin3.sprite,coin3.x,coin3.y,1,1,true)
	if (not coin4.collected) spr(coin4.sprite,coin4.x,coin4.y,1,1,true)
	if (not coin5.collected) spr(coin5.sprite,coin5.x,coin5.y,1,1,true)
	if (not coin6.collected) spr(coin6.sprite,coin6.x,coin6.y,1,1,true)
	
	if (not stam_coin1.collected) spr(stam_coin1.sprite,stam_coin1.x,stam_coin1.y,1,1,true)
	if (not stam_coin2.collected) spr(stam_coin2.sprite,stam_coin2.x,stam_coin2.y,1,1,true)
	if (not stam_coin3.collected) spr(stam_coin3.sprite,stam_coin3.x,stam_coin3.y,1,1,true)
	if (not stam_coin4.collected) spr(stam_coin4.sprite,stam_coin4.x,stam_coin4.y,1,1,true)
	if (not stam_coin5.collected) spr(stam_coin5.sprite,stam_coin5.x,stam_coin5.y,1,1,true)
	if (not stam_coin6.collected) spr(stam_coin6.sprite,stam_coin6.x,stam_coin6.y,1,1,true)
	if (not stam_coin7.collected) spr(stam_coin7.sprite,stam_coin7.x,stam_coin7.y,1,1,true)
	if (not stam_coin8.collected) spr(stam_coin8.sprite,stam_coin8.x,stam_coin8.y,1,1,true)
	if (not stam_coin8.collected) spr(stam_coin8.sprite,stam_coin8.x,stam_coin8.y,1,1,true)
	if (not stam_coin9.collected) spr(stam_coin9.sprite,stam_coin9.x,stam_coin9.y,1,1,true)
	if (not stam_coin10.collected) spr(stam_coin10.sprite,stam_coin10.x,stam_coin10.y,1,1,true)
	if (not stam_coin11.collected) spr(stam_coin11.sprite,stam_coin11.x,stam_coin11.y,1,1,true)
	if (not stam_coin12.collected) spr(stam_coin12.sprite,stam_coin12.x,stam_coin12.y,1,1,true)
	spr(winflag.sprite,winflag.x,winflag.y,1,1,false)
	
	end

-->8
--player code
function player_setup()
	p={}
	p.x=6*8
	p.y=62*8
	--for testing
	--p.x=96*8
 --p.y=4*8
	--
	p.dx=0
	p.dy=0
	p.w=8
	p.h=8
	p.alt=0
	p.max_dx=1
	p.max_dy=2
	p.sprite=49
	p.timer=0 --animation timer
	p.stam=56
	p.maxstam=56
	--p.maxstam=112
	p.stamtarget=p.stam
	p.stamcoin=0
	p.score=0
	p.coin_score=0
	p.face=false --false is right
	p.ct = 0 --jump timer
	p.acc=0.3 --accelration
	p.dcc=0.6 --deceleration
	--jump
	p.air_dcc=1
	p.jump_pressed=0
	p.is_pressed=false
	p.jump_speed=1.9
	p.ticks_down=0
	p.hold_time=0
	p.max_hold=12
	p.min_hold=5
	p.released=true
	p.grounded=true
	p.air_time=0
	--climb
	p.climbing=false
	p.climb_acc=0.3
	p.climb_time=0
	p.ice_time=0
	
	--win condition
	p.never_fell=true
	p.all_coins=false
	p.no_gold_coins=true
	p.no_green_coins=true
	p.time='0'
end

	


function draw_player()
	spr(p.sprite,p.x,p.y,1,1,p.face)
end

function update_player()
--check for climbable wall
	if climb_collide() and p.stam>0 and not obsidian_collide() then
		p.climbing=true
		p.dy=0
	end
		
	if bumper_top_collide() then
		if (p.dy>0) p.dy*=-2
		p.dx*=2
	end
		
	--jumping
	if btn(❎) and p.stam>1 and not winflag.collected then
	
	 local on_ground=(p.grounded or p.air_time<5)
		local new_jump=p.ticks_down<10
		
		---increment stamina
		if p.ticks_down==0 and on_ground then
		-- p.stam-=14
			p.stamtarget=p.stam-14
		
		end

		
		p.ticks_down+=1
		
		--initial jump
		if p.hold_time>0 or (on_ground and new_jump) or (p.climbing and new_jump) then
			p.hold_time+=1
		
			if p.hold_time<p.max_hold then
				--stop climbing
				if p.climbing and p.hold_time<5 then
					p.climbing=false
					p.climb_time=0
				--push away from wall
					if (not p.face) p.dx-=p.acc/2
					if (p.face) p.dx+=p.acc/2
				end
				--add height
				p.dy=-p.jump_speed
				p.air_time+=1
				if (p.ticks_down==1 and new_jump) sfx(0)
			end
		end
		
				--minimum jump height
	elseif (not btn(❎) and p.hold_time>0 and p.hold_time<p.min_hold) then
		p.dy=-p.jump_speed
		p.hold_time+=1
	else --end jump
		p.hold_time=0
		p.is_pressed=false
		p.ticks_down=0
	end
	
	--walking
	if btn(⬅️) and not winflag.collected and not p.climbing then
		p.dx-=p.acc
		p.face=true
		animate(p, 49, 51, 4)
	elseif btn(➡️) and not winflag.collected and not p.climbing then
		p.dx+=p.acc
		p.face=false
		animate(p, 49, 51, 4)
	else
	--decelerate
		if p.grounded then
			p.dx*=p.dcc
		else
			p.dx*=p.air_dcc
		end
	end
	
	--cap speed
	p.dx=mid(-p.max_dx,p.dx,p.max_dx)

--	move horizontally
	if not wall_collide() and not p.climbing then 
		if (not p.climbing) p.x+=p.dx
	end
	
	--floor collision
	if floor_collide() then
	--if touching the ground, reset jump time
		p.y=flr((p.y)/8)*8
		p.grounded=true
		if (p.air_time>0) sfx(1)
		p.air_time=0
		--increment_stam(p.maxstam)
		p.stamtarget=p.maxstam

	elseif not floor_collide() and not p.climbing then	
	---apply graviaty while in air
		p.grounded=false
		p.sprite=54
		p.air_time+=1
		p.dy+=g.grav
		p.dy=mid(-p.max_dy,p.dy,p.max_dy)		
	end
	
	--ceiling collision
	if not ceiling_collide() and not p.climbing then
	--move vertically
		p.y+=p.dy
	elseif ceiling_collide() then
		--halt upward movement, begin descent
		p.dy=0
		p.dy+=g.grav
		p.y+=p.dy
		p.hold_time=26
		p.hold_time=26
	end
	
	
--climbing
	if p.climbing and p.stam>0 then
		if (p.climb_time<2)	p.sprite=52
		p.climb_time+=1
		p.dy=0
		p.dx=0
		p.air_time=0
		--ice
		if ice_collide() then 
			p.ice_time+=1
			if p.ice_time>15 then
				p.dy=g.grav+.2
				p.y+=p.dy
			end
		else
			p.ice_time=0
		end	
		if magma_collide() then
			p.stamtarget-=0.1
		end
		
	--	if obsidian_collide() then
			
	--	end
		
		
	----fix problem with climbing facing left
		if btn(⬆️) then
			---test for top of ledge
			--if at top, jump onto ledge
			--if not, climb up
		if ledge_collide() then
				p.climbing=false
				p.climb_time=0
				p.dy+=-1.8
				if (p.face) p.dx+=-0.5	else p.dx+=0.5
				move_player()
		elseif ceiling_collide() then 
			p.dy=0
		else
				if (not obsidian_collide()) climb_up()
				p.stamtarget-=0.1
				animate(p, 52, 53, 5)
				p.y+=p.dy
				p.dx=0
			end

		elseif btn(⬇️) then
		--test for bottom of ledge
		--if so, fall, if not, climb
			if climb_drop() then
				p.climbing=false
				p.climb_time=0
				if (p.face) p.dx=p.acc else p.dx=-p.acc
				p.x+=p.dx
			end
			if floor_collide() then
			--check for floor below
			--if so, drop
				p.climbing=false
				p.climb_time=0
				p.sprite=49
				if (p.face) p.dx=p.acc*2 else p.dx=-p.acc*2
				p.x+=p.dx
			else
				climb_down()
				p.stamtarget-=0.1
				animate(p, 52, 53, 5)
				p.y+=p.dy
				p.dx=0
			end
		elseif btn(➡️) then
	 	if p.face and p.climbing then
				p.climbing=false
				p.sprite=49
				p.climb_time=0
				p.x+=0.5
			end
		elseif btn(⬅️) then
			if (not p.face) and p.climbing then
				p.climbing=false
				p.sprite=49
				p.climb_time=0
				p.x-=0.5
			end
		else
			p.dy*=p.dcc
			p.sprite=52
		end
	elseif p.climbing and p.stam<1 then
		p.climbing=false
		if (p.face) p.dx=p.acc else p.dx=-p.acc
		p.x+=p.dx
	end
	if floor_collide() then
		ground_player()
	end
	
	--stamina
	increment_stam(p.stamtarget)
	if (p.stam<1) p.never_fell=false
	--coin
	if btnp(🅾️) and p.stamcoin>0 then
		if p.stamtarget<p.maxstam then
			p.stamcoin-=1
			p.stamtarget=p.maxstam
			if (p.no_green_coins) p.no_green_coins=false
		end
	end
	
	--stamina
	increment_stam(p.stamtarget)
	
	--score
	set_alt()
	set_score()
	if (p.coin_score>1) p.no_gold_coins=false
	if (p.coin_score>1799) p.all_coins=true

	
	--level transition
	if p.y<8 then
		p.x+=16*8
		p.y+=(62*8)-2
		camx+=16*8
		camy=49*8
		bg_y=0
		bg_x+=16*8
		if camx>511 and camx<767 then
			bg_color=2
			bg_y=32*8
			--pal(5,0,0)
			pal5=0
			--pal(6,5,0)
			pal6=5
			music(5)
		elseif camx>767 then
			bg_color=1
			--pal(5,5,0)
			pal5=5
			pal6=6
			--pal(6,6,0)
			bg_y=32*8
			music(0)
		end
	elseif p.y>64*8 then
		p.x-=16*8
		p.y-=(63*8)+2
		camx-=16*8
		camy=8
		bg_x-=16*8

		if camx<511 then
			bg_color=12
			bg_y=0
			pal(5,5,0)
			pal(6,6,0)
		end
	end
	
	--ending
	is_ending()
end
-->8
--functions

function floor_collide()
	--returns true if  collides
	--check bottom corners of player
    local v1=mget((p.x+2)/8,(p.y+8)/8)
    local v2=mget((p.x+5)/8,(p.y+8)/8)
    if p.dy>=0 then
    	if fget(v1,0) or fget(v2,0) then
    		return true
    	end
    end
end

function wall_collide()
	local xoffset=-1
	if p.dx>0 then xoffset=8 end
	local h=mget((p.x+xoffset)/8,(p.y+7)/8)
	if fget(h,solid) then
		return true
	end
end

function climb_collide()		
	local xoffset=-1
	if not p.face then xoffset=8 end
	local h=mget((p.x+xoffset)/8,(p.y+2)/8)
	if fget(h,climbable) then
			return true
	else
		return false
	end
end

function magma_collide()		
	local xoffset=-1
	if not p.face then xoffset=8 end
	local h=mget((p.x+xoffset)/8,(p.y+2)/8)
	if fget(h,magma) and p.climbing then
		return true
	else
		return false
	end
end

function obsidian_collide()		
	local xoffset=-1
	if not p.face then xoffset=8 end
	local h=mget((p.x+xoffset)/8,(p.y+2)/8)
	if fget(h,obsidian) then
		return true
	else
		return false
	end
end

function ice_collide()		
	local xoffset=-1
	if not p.face then xoffset=8 end
	local h=mget((p.x+xoffset)/8,(p.y+6)/8)
	if fget(h,ice) then
		return true
	else
		return false
	end
end

function ledge_collide()		
	local xoffset=-2
	if (not p.face) xoffset=9
	local h=mget((p.x+xoffset)/8,(p.y-1)/8)
	if not fget(h,solid) then
		return true
	else
		return false
	end
end

function ceiling_collide()
 v=mget((p.x+4)/8,(p.y)/8)
   
    --only check for ceilings when
    --moving up
  if p.dy<=0 then
  --look for solid tile
    if fget(v,solid) then
   		return true
    end
  end
end

function climb_floor_collide()
	local xoffset=8
	if (p.face) xoffset=0
	local h=mget((p.x+4)/8,(p.y+9)/8)
	if fget(h,solid) then
		return true
	else
		return false
	end
end

function move_player()
	p.y+=p.dy
	if (not p.climbing) p.x+=p.dx
end
function ground_player()
		p.climbing=false
		p.climb_time=0
		p.grounded=true
		p.y=flr((p.y)/8)*8
end
function climb_drop()
	local xoffset=9
	if (p.face) xoffset=-1
	local h=mget((p.x+xoffset)/8,(p.y+9)/8)
	local h2=mget((p.x+4)/8,(p.y)/8)
	if not fget(h,solid) then
				return true
			else
				return false
			end
end

function bumper_side_collide()		
	local xoffset=0
	if not p.face then xoffset=7 end
	local h=mget((p.x+xoffset)/8,(p.y-4)/8)
  
	if fget(h,bumper) then
		return true
	else
		return	false
	end
end

function bumper_top_collide()
	--local h=mget((p.x+7)/8,(p.y+4)/8)
	local h2=mget((p.x+4)/8,(p.y+4)/8)
	if fget(h2,bumper) then
 	return true
 else
 	return false
 end
end

function move_left()
	p.dx-=p.acc
	p.face=true
	p.sprite+=1
	if p.sprite>50 then
		p.sprite=49
	end
end

function move_right()
	p.dx+=p.acc
	p.face=false
	p.sprite+=1
	if p.sprite>50 then
		p.sprite=49
	end
end

function climb_up()
	p.dy-=p.climb_acc
	p.dx=0
end

function climb_down()
	p.dy+=p.climb_acc
	p.dx=0
end



--point to box intersection.
function intersects_point_box(px,py,x,y,w,h)
 if flr(px)>=flr(x) and flr(px)<flr(x+w) and
            flr(py)>=flr(y) and flr(py)<flr(y+h) then
        return true
    else
        return false
    end
end

function intersects_box_box(
    x1,y1,
    w1,h1,
    x2,y2,
    w2,h2)

    local xd=x1-x2
    local xs=w1*0.5+w2*0.5
    if abs(xd)>=xs then return false end

    local yd=y1-y2
    local ys=h1*0.5+h2*0.5
    if abs(yd)>=ys then return false end
    return true
end


--square root.
function sqr(a) return a*a end

--round to the nearest whole number.
function round(a) return flr(a+0.5) end


--
--animate functions
--
function animate(character, firstsprite, lastsprite, speed)
	character.timer+=1
	if character.timer%speed==0 then
		character.sprite+=1
		if (character.sprite>lastsprite) character.sprite=firstsprite
	end
end

function animate_item(character, firstsprite, lastsprite, speed)
	character.timer+=1
	if character.timer==4 then
		character.sprite+=1
		character.timer=0
	end
	if (character.sprite>lastsprite) character.sprite=firstsprite
end



--
--camera functions
--
function camera_init()
	--testin
	camx=0
	camy=49*8
 --camy=0*8
 --640
	--camx=384
	camera(camx,camy)
	bg_x=camx
	
end
function camera_update()
 if	p.y<camy+(10*8) then
		if camy>8 then
		 camy-=1
		 bg_y-=0.7
		end
	elseif p.y>camy+(13*8)then
		if camy<49*8 then
		 camy+=2
		 bg_y+=0.9
		end
	elseif camy>49*8 then
		camy=49*8
	end
	camera(camx,camy)	
end

--
--hud functions
--

function increment_stam(target)
	if (p.stam<target) p.stam+=1
	if (p.stam>target) p.stam-=1
end


function set_alt()

	p.alt=((p.y-495)*-1)+(496*(camx/128))
	
end

function set_score()
	if round(p.alt/2)>p.score then
		p.score+=round((p.alt/2)-p.score)
	end
end

function is_ending()
	if p.x>(95*8) and p.y<(20*8) then
		if (p.all_coins) winflag.sprite=55
		if (p.never_fell) winflag.sprite=39	
		if (p.no_gold_coins==true) winflag.sprite=41	
		if (p.all_coins and p.never_fell) winflag.sprite=62	
		if (flag_collide()) winflag.collected=true
		if (winflag.collected) end_game()
	end
end

function flag_collide()
		if intersects_box_box(winflag.x+3,winflag.y,5,8,p.x,p.y,8,8) then
  	return true
  else
  	return false
  end
end

function end_game()
	p.dx=0
	p.dy=0
	final_score()
	if winflag.y>winflag.target then
 			 winflag.y-=1 
	end
end

function final_score()
	print("you win",camx+10,camy+10,6)
	test=true
end

function minutes(seconds)
 local minutes = seconds\60
	seconds=seconds%60
	if (seconds<10) seconds="0"..seconds
 local string= " "..minutes..":"..seconds 
	return string	
end
-->8
--items
coin1={}
coin1.x=5*8
coin1.y=25*8
coin1.sprite=36
coin1.timer=0
coin1.collected=false

coin2={}
coin2.x=20*8
coin2.y=22*8
coin2.sprite=36
coin2.timer=0
coin2.collected=false

coin3={}
coin3.x=(43*8)+4
coin3.y=30*8
coin3.sprite=36
coin3.timer=0
coin3.collected=false

coin4={}
coin4.x=(50*8)
coin4.y=24*8
coin4.sprite=36
coin4.timer=0
coin4.collected=false

coin5={}
coin5.x=(67*8)
coin5.y=28*8
coin5.sprite=36
coin5.timer=0
coin5.collected=false

coin6={}
coin6.x=(92*8)
coin6.y=14*8
coin6.sprite=36
coin6.timer=0
coin6.collected=false

stam_coin1={}
stam_coin1.x=28
stam_coin1.y=50*8
stam_coin1.sprite=20
stam_coin1.timer=0
stam_coin1.collected=false

stam_coin2={}
stam_coin2.x=(9*8)-5
stam_coin2.y=36*8
stam_coin2.sprite=20
stam_coin2.timer=0
stam_coin2.collected=false

stam_coin3={}
stam_coin3.x=(25*8)-5
stam_coin3.y=47*8
stam_coin3.sprite=20
stam_coin3.timer=0
stam_coin3.collected=false

stam_coin4={}
stam_coin4.x=(25*8)-4
stam_coin4.y=(16*8)+4
stam_coin4.sprite=20
stam_coin4.timer=0
stam_coin4.collected=false

stam_coin5={}
stam_coin5.x=(44*8)-4
stam_coin5.y=(57*8)+4
stam_coin5.sprite=20
stam_coin5.timer=0
stam_coin5.collected=false

stam_coin6={}
stam_coin6.x=(33*8)+4
stam_coin6.y=(24*8)+4
stam_coin6.sprite=20
stam_coin6.timer=0
stam_coin6.collected=false

stam_coin7={}
stam_coin7.x=51*8
stam_coin7.y=61*8
stam_coin7.sprite=20
stam_coin7.timer=0
stam_coin7.collected=false

stam_coin8={}
stam_coin8.x=51*8
stam_coin8.y=(10*8)+4
stam_coin8.sprite=20
stam_coin8.timer=0
stam_coin8.collected=false

stam_coin9={}
stam_coin9.x=(78*8)-4
stam_coin9.y=(46*8)-4
stam_coin9.sprite=20
stam_coin9.timer=0
stam_coin9.collected=false

stam_coin10={}
stam_coin10.x=(67*8)
stam_coin10.y=(12*8)-4
stam_coin10.sprite=20
stam_coin10.timer=0
stam_coin10.collected=false

stam_coin11={}
stam_coin11.x=(81*8)+4
stam_coin11.y=(45*8)
stam_coin11.sprite=20
stam_coin11.timer=0
stam_coin11.collected=false

stam_coin12={}
stam_coin12.x=(92*8)
stam_coin12.y=(26*8)
stam_coin12.sprite=20
stam_coin12.timer=0
stam_coin12.collected=false

winflag={}
winflag.x=(103*8)-1
winflag.y=(6*8)-1
winflag.sprite=23
winflag.timer=0
winflag.collected=false
winflag.target=(4*8)

-->8
---bugs
--camera still scrolls down too fast/wrong
--spike blocks not functioning properly?

--to do:

-->8
--menu functions
function update_menu()
	cls(bg_color)
	map(112,32,bg_x,bg_y,128,512)
	bg_y-=0.1
	if (bg_y<-180) bg_y=0
	print('press ❎ to start',(0+64-(17*2))+1,(10*8),0)
	print('press ❎ to start',0+64-(17*2),10*8,10)
	spr(64,0+64-(15*2),5*8,9,4) 	
	print("1.1", 1,1,0)
	if btnp(❎) then
		scene="start"
	end
end
__gfx__
00000000555555555555555555555555555566666666566567777776c666666c57655765000000005dddddd59885998889958899800000080000000000000000
0000000066555567765556655555556555565660066556657cc7ccc76c7777c65665566500000000d552555d8885888899959999080000800000000000000000
0070070066555566665556655655555555667500005765557c7cccc767cccc765555566500000000d525555d8855888899559999008008000007600000070000
00077000555555666655555555566555566660000006665577cccc7767cccc765776566500066000d255552d5555555555555555000880000077760000777000
0007700055555555555555555556655565660000000066567cccc7c767cccc765666555500555500d555525d5555555555555555000880000777776000070000
0070070055555667766555555555555567500000000005767ccc7cc767cccc765666555505675550d555255d9855555589555555008008000777777000000000
0000000056556667766655655665556567000000000000767cc7ccc76c7777c65555556565665675d552555d8885559899955589080000800077770000000000
00000000555566666666555555555555600000000000000667777776c666666c55555555655556665dddddd58885558899955599800000080000000000000000
0000000055555555555555555555555500333b0000333b00000300000000008800000aa055555555766577665776576656775667555555555555555500000000
0000000055566667766665555665556503bbb3b003bbb3b0003b30000000888800000aa076555576666566665666566656665666555888899888855500000000
000000005556666776666555566555553bb3bb3b3bb3bb3b003b3000008888880000004076576566666566665666555556665666555888899888855500000000
000000005655666666665565555555553b3b3b3b3b3b3b3b003b3000088888880000004066566555666566665666576656665666585588888888558500000700
000000005555555555555555556565553b3b3b3b3b3b3b3b003b3000008888880000004055555555555555555555566655555555555555555555555500000000
000000005556756776576555555555553bb3bb3b3bb3bb3b003b3000000088880000004076555555766655555555555555556667555895899859855500000000
0000000055666566665666555655566503bbb3b003bbb3b0003b3000000000880000004066655576666655555655665555556666558885888858885500000000
0000000055555566665555555555555500333b0000333b0000030000000000000000004066655566666655555555665555556666555555888855555500000000
000000007665776600000000555555550099990000999a0000090000000000bb000000400000002255555555555555555555555555555555555555550aa33330
0000000066656666000000005555555509aaaa9009aaa9a0009a90000000bbbb00000040000022227655555555555665555555675559999889999555003a3333
000000006655666600000000555555559aa99aa99aa9aa9a009a900000bbbbbb00000040002222226655555556655665555555665559999889999555044f5f50
000000005555555500000000555555559a9aa9a99a9a9a9a009a90000bbbbbbb0000004002222222665555555555555555555566595599999999559504ff4fff
000000005555555500000000555555559a9aa9a99a9a9a9a009a900000bbbbbb00000040002222225555555555655555555555555555555555555555000ff440
000000007655555500000000555555559aa99aa99aa9aa9a009a90000000bbbb000000400000222276655555555566555555666755598598895895550b73773b
0000000066655576000000005555555509aaaa9009aaa9a0009a9000000000bb0000004000000022766655555655665555556667559995999959995500333330
000000006665556600000000555555550099990000999a0000090000000000000000004000000000666655555555555555556666555555999955555500400004
000000000aa333300aa333300aa333300aa333300aa333300aa33330000000aa0000004077665555666656655555655566556666555566770000007700000000
00000000003a3333003a3333003a3333003a3333003a3333003a33330000aaaa0000004066665555066556655555556666565660555566660000777700000000
00000000044f5f50044f5f50044f5f500044ff500044ff50044f5f5000aaaaaa0000004066665555005765555665556655667500555566660077777700000000
0000000004ff4fff04ff4fff04ff4fff004ff4ff004ff4ff04ff4fff0aaaaaaa0000004055555555000666555665555556666000555555550777777700000000
00000000000ff440000ff440000ff440000fff40000fff4b0b0ff44b00aaaaaa0000004066655555000066565555576565660000555556660077777700000000
000000000073773700737737007377370003377b00033770007377370000aaaa0000004066657666000005765555566567500000766656660000777700000000
000000000b33333b0b33333b0b33333b000333340003333000333330000000aa0000004066656666000000765766566567000000666656660000007700000000
00000000000040400040000400040400000033000000330400400004000000000000055576656666000000065666566560000000666656670000000000000000
00033333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00337777777300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03377777777730333330000033333333333000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
03777777777773377773333337777777773333333333300000333333330000000000000000000000000000000000000000000000000000000000000000000000
03777333337773377773333337777777773777737777333333777777730000000000000000000000000000000000000000000000000000000000000000000000
33777333337773377773333337777333773777737777777773777777730000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377773333337777333773777737777777773777777730000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377773333337777333773777737777777773777333330000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377773333337777333773777737777337773777333000000000000000000000000000000000000000000000000000000000000000000000000
37777777777777377773333337777777773777737777337773777773000000000000000000000000000000000000000000000000000000000000000000000000
37777777777777377773333337777777773777737777337773777773000000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377773333337777333333777737777337773777333000000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377777777737777333333777737777337773777333330000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377777777737777333333777737777337773777777730000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377777777737777333333777737777337773777777730000000000000000000000000000000000000000000000000000000000000000000000
37777333337777377777777737777333333777737777337773777777730000000000000000000000000000000000000000000000000000000000000000000000
33333333333333333333333333333333333333333333333333333333330000000000000000000000000000000000000000000000000000000000000000000000
00000000337773333377777333777773337777733737777333733000000000000000000000000000000000000000000000000000000000000000000000000000
00000003373337333733333737333337373333373773333737773000000000000000000000000000000000000000000006660000000000000000000000000000
00000003733337333733333337333333373333373733333733733000000000000000000000000000000000000000000667776600000000000000000000000000
00000003733337333377777337333333377777733733333733730000000000000000000000066666000000000000000777777700000000000000000000000000
00000003733337333333333737333333373333333733333733730000000000000000000000677777600000000006666777777760000000000000000000000000
00000003373337333733333737333337373333373733333733733000000000000000000006777777766666000667777677777770000000000000000000000000
00000000337773773377777333777773337777733733333733773000000000000000000007777777677777700777777767777770000000000000000000000000
00000000033333333333333333333333333333333333333333333000000000000000000007777776777777760777777767777700000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000777777777777700777777777776660000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000077777777777000777777777777776000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000007777777770000777777777777777000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077777777777770000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
10000000000000000000a1c1000000203030110000000000000021100000603260000000002060210000600000603131600000000000000000000000000060b2
a00000000000000000001200000000e1d20000e2d100000000000000000000e1100000000000000000a1b1b1c100002000000000000000000000000000000000
11000000000000000000a2c20000002032311000000000000000201100006032600000000093b3d3000060000060313160000000000000000000000000006030
a00000000000000000000000000000e2d10000e1d200000000000000000000e2110000000000000000a23232c200002100000000000000000000000000000000
10000000a1c100000000a2c20000002032301100000000000000601000006032c200000000000000000060000060303060000000000000000000000000006031
a00000000000000000000000000000e1d20000e2d100000000000000000000e1110000000000000000a23232c200002100000000000000000000000000000000
1000000093d300000000a2c20000a1313231100000000000000060c20000603211000000000000000000600000603131600000000000000000a1c10000006030
a00000000000000000000000000000e2d10000e1d200000000000000000000e210000000000000000093b3b3d3000020000000000096a6000000000000000000
10000000000000000000a2c20000a2303231400000000000000060600000a232c200000000000000000060000060303060000000000000000093d30000006031
d10000000000000000a00000000000e1d2000093d300000000000000000000e11100000000a1c1000000000000000021000000000097a7000000000000000000
10000000000000000000a2c20000a23131100000000000000000606000002132c200000000000000000060000060313160000000a1c100000000000000006030
d200000000a0000000000000000000e2d100000000000000a0a00000000000e21000000000a2c200000000000000002000000000000000000000000000000000
30c10000000000000000a2c20000a3313111000000000000000060600000a23231b1b1b1b1c10000000000000020b2306000000093d300000000000000006031
d10000000000000000000000000000e1d200000000000000a0a00000000000e11100000000a2c200000000000000002100b6c600000000000000000000000000
31c20000000000000000a2c200000020301000000000000000000000000021323231303130110000000000000021303160000000000000000000000000006030
d20000000000000000000000000000e2d100000000000000e2d10000000000e21100000000a2c200000000000000002100b7c700000000000000000000000000
31c3000000a1b1c1000093d300000020311100000000a1b1c10000000000a2323232323031100000000000000020b23060000000000000000012000000006031
d1000000a0a0a00000000000000000e1d200000000000000e1d20000000000e11000000000a2c200000000000000002000000000000000000000000000000000
10000000002132110000000000000021321000000000a2b2c200a1b1b1b1b2323232323131110000000000000021303160000000000000000000000000006030
d2000000a0a0a00000000000000000e2d100000000000000e2d10000000000e21100000000a2c200000000000000002100000000000000000000000000000000
1000000000203210000000000000002030110000000093b3d300a2b2323232323232303130400000000000000020b23010000000000000000000000000002031
d1000000a0a0a00000000000000000e1d20000a0a0000000e1d20000000000e1100000000093d30000000000000000200000000096a600000000000000000000
100000000093b3d3000000000000002131100000000000000000a232b23232323232313060000000000000000021303111000000120000000000000000002130
a0000000a2a0a00000000000000000e2d10000a0a0000000e2d10000000000e2110000000000000000000000000000210000000097a700000000000000000000
10000000000000000000000000000020311000000000000000002130323232323232303160000000a1c100000020b230c2000000000000000000000000002031
d1000000a0a0a00000000000000000e1d20000e1d200000093d30000000000e11100000000000000000000000000002100000000000000000000000000000000
100000000000000000000000a18080303110000000000000000050303032323232c2303160000000a2c200000060303111000000000000000000000000002130
d2000000a0a0a00000000000000000e2d10000e2d100000000000000000000e21000000000000000000000000000002000000000000000000000000000b6c600
100000000000000000000000203232323110000000000000000000a232323232323131316000000093d300000060313010000000000000000000000000002031
d1000000a0a0a00000000000000000e1d20000e1d200000000000000000000e111000000a1b1b1c10000000000000021000000000000000096a6000000b7c700
100000000000000000000000a331323231100000000000000000002130323232323230b260000000000000000060303111000000000000000000000000002130
d200000000000000000000000000a130d10000e2d100000000000000000000e210000000a23232c20000000000000020000000000000000097a7000000000000
10b1c10000a1b1b1b1c1000000a3b3323110000000000000000000a23232323232323030600000000000000000603130c2000000000000000000000000002130
d100000000000000000000000000a231d20000e1d200000000000000000000e111000000a23232c2000000000000002100000000000000000000000000000000
32b2110000a2b232b2100000000000a2311000000000000000000020303232323232308060000000000000000060303232b1b1b1b1b1c1000000000000002031
d200000000000000000000000000e130d1000093d300000000000000000000e21100000093b3b3d3000000000000002100000000000000000000000000000000
3231100000a2323232110000000000a23110000000000000000000213232323232328030600000000000000000a3b23232323232323210000000000000002130
d20000a1b1b1c100000000000000e231d20000000000000000000000000000e110000000000000000000a1c1000000200000000000000000000000b6c6000000
3230c20000a2323232100000000000a2311000000000000000000020303232323132328060000000a1c100000000203132323232323211000000000000002031
d20000a03232d100000000000000e130d10000000000000000000000000000e211000000000000000000a2c2000000210000000000000000000000b7c7000000
3231c30000a2b232b211000000000020311000000000000000000021303130323032313011000000a2c200000000213032323232323210000012000000002130
d10000a03232d200000000000000e231d20000000000a1b1b1c10000000000e110000000000000000000a2c20000002000000000000000000000000000000000
10c3000000a3b3b3b3c3000000000020311000000000a1c10000002031303132323230311100000093d300000000203132323232323060000000000000002031
d20000a03232d100000000000000e130d10000000000a23232c20000000000e211000000000000000000a2c20000002100000000b6c600000000000000000000
110000000000000000000000000000a2311000000000201100000021303130323232313011000000000000000000213032303232323160000000000000002130
d10000a03232d200000000000000e231d2000000000093b3d3d30000000000e111000000000000000000a2c20000002100000000b7c700000000000000000000
100000000000000000000000000000213140000000002110000000a3303031323230b3b3c3000000606000000000203132323232323060000000000000006031
d20000a23232d100000000000000a030d10000000000000000000000000000e210000000000000000000a2c2000000200000000000000000000096a600000000
1100000000a1b1c10000000000000020100000000000201100000000a33131303011000000000000206000000000213032323230323110000000120000006032
d10000a032b2c300000000000000a031d20000000000000000000000000000e11100000000000000000093d3000000210000000000000000000097a700000000
b2b1c100002132c20000000000a1803111000000000021100000000000a331313110000000000000606000000000203131323232323011000000000000006031
d20000a0b3c30000000000000000a030d10000000000000000000000000000e21000000000000000000000000000002000000000000000000000000000000000
32b2110000a232c200000000002130301000000000002011000000000000503031600000606000006060000000002031323232323231c2000000000000006030
d100000000000000000012000000a0301100000000000000000000000000002111000000a1b1b1c1000000000000002100000000000000000000000000000000
32b2c30000a2b2c20000000000a23032110000000000a130b1c10000000000203160000060600000000000000000203132b2b3b3b3b210000000000000002131
1100000000000000000000000000a0311000000000000000000000000000002011000000a23232c20000000000000021000000000096a6000000000000000000
b2c3000000a3b3c300000000a1303232100000000000a230b2c2000000000020311000006060000000000000000020313011000000a2c2000000000000002030
100000000000000000000000000021301100000000000000000000000000002110000000a23232c20000000000000020000000000097a70000b6c60000000000
10000000000000000000000021303232100000000000a3b3b34000000000a131311000000000000000000000000020313110000000a2b2c10000000000002131
11000000a1b1b1b1b1b1c10000002031100000000000000000000000000000201100000093b3b3d30000000000000021000000000000000000b7c70000000000
110000000000000000000000a230323230c100000000000000000000000020313110000000000000000000000000203130110000002130110000000000002030
1000000093b3b393b3b3d30000002130110000000000000000000000000000211000000000000000000000000000002000000000000000000000000000000000
30b180b1b180b180b180b180b2323232311100000000000000000000000021303110000000000000000000000000203131c2000000a2b2c200000000000021b2
1100000000000000000000000000a231c20000000000000000000000000000a21100000000000000000000000000002100000000000000000000000000000000
__label__
5555555555555566cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc6655555555555566ccccccccc77777777777666c66555555
5565655555555555cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc5555555555555555ccccccccc77777777777777655555555
5555555555556667cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc7665555555555667ccccccccc77777777777777776655555
5655566556556667ccccccccccccccccccccccccccccccccccccccccccccccccccc66666cccccccc7666556556556667cccccccccc7777777777777c76665565
5555555555556666cccccccccccccccccccccccccccccccccccccccccccccccccc6777776ccccccc6666555555556666cccccccccccccccccccccccc66665555
5555555566556666cccccccccccccccccccccccc766577665776576656775667c6777777766666cc7766555555556677cccccccccccccccccccccccc55555555
566555656656566ccccccccccccccccccccccccc666566665666566656665666c77777776777777c6666555555556666cccccccccccccccccccccccc76555665
56655555556675cccccccccccccccccccccccccc666566665666555556665666c7777776777777766666555555556666cccccccccccccccccccccccc66555665
5555555556666ccccccccccccccccccccccccccc666566665666576656665666cc7777777777777c5555555555555555cccccccccccccccccccccccc66555555
556565556566cccccccccccccccccccccccccccc555555555555566655555555ccc77777777777cc6665555555555666cccccccccccccccccccccccc55555555
55555555675ccccccccccccccccccccccccccccc766655555555555555556667cccc777777777ccc6665766676665666cccccccccccccccccccccccc76655555
5655566567cccccccccccccccccccccccccccccc666655555655665555556666cccccccccccccccc6665666666665666cccccccccccccccccccccccc76665565
555555556ccccccccccccccccccccccccccccccc666655555555665555556666cccccccccccccccc7665666666665667cccccccccccccccccccccccc66665555
55555555cccccccccccccccccccccccccccccccc555555555555555555555555cccccccccccccccccccccccccccccccccccccccccccccccccccccccc55555555
66555567cccccccccccccccccccccccccccccccc766665555555556555566667cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76666555
66555566cccccccccccccccccccccccccccccccc766665555655555555566667cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76666555
55555566cccccccccccccccccccccccccccccccc666655655556655556556666cccccccccccccccccccccccccccccccccccccccccccccccccccccccc66665565
55555555cccccccccccccccccccccccccccccccc555555555556655555555555cccccccccccccccccccccccccccccccccccccccccccccccccccccccc55555555
55555667cccccccccccccccccccccccccccccccc765765555555555555567567cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76576555
56556667cccccccccccccccccccccccccccccccc665666555665556555666566cccccccccccccccccccccccccccccccccccccccccccccccccccccccc66566655
55556666cccccccccccccccccccccccccccccccc665555555555555555555566cccccccccccccccccccccccccccccccccccccccccccccccccccccccc66555555
55555555cccccccccccccccccccccccccccccccc555555555555555555555555cccccccccccccccccccccccccccccccccccccccccccccccccccccccc55555555
66555567cccccccccccccccccccccccccccccccc765556655665556566555567cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76555665
66555566cccccccccccccccccccccccccccccccc665556655665555566555566cccccccccccccccccccccccccccccccccccccccccccccccccccccccc66555665
55555566cccccccccccccccccccccccccccccccc665555555555555555555566cccccccccccccccccccccccccccccccccccccccccccccccccccccccc66555555
55555555cccccccccccccccccccccccccccccccc555555555565655555555555cccccccccccccccccccccccccccccccccccccccccccccccccccccccc55555555
55555667cccccccccccccccccccccccccccccccc766555555555555555555667cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76655555
56556667cccccccccccccccccccccccccccccccc766655655655566556556667cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76665565
55556666cccccccccccccccccccccccccccccccc666655555555555555556666cccccccccccccccccccccccccccccccccccccccccccccccccccccccc66665555
55555555cccccccccccccccccccccccccccccccc776655555555655555556677cccccccccccccccccccccccccccccccccccccccccccccccccccccccc55555555
66555567cccccccccccccccccccccccccccccccc666655555555556655556666cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76666555
66555566cccccccccccccccccccccccccccccccc666655555665556655556666cccccccccccccccccccccccccccccccccccccccccccccccccccccccc76666555
55555566cccccccccccccccccccccccccccccccc555555555665555555555555cccccccccccccccccccccccccccccccccccccccccccccccccccccccc66665565
55555555cccccccccccccccccccccccccccccccc666555555555576555555666ccccccccccccccccccccccccccccccccc666cccccccccccccccccccc55555555
55555667cccccccccccccccccccccccccccccccc666576665555566576665666ccccccccccccccccccccccccccccccc6677766cccccccccccccccccc76576555
56556667cccccccccccccccccccccccccccccccc666566665766566566665666ccccccccccccccccccccccccccccccc7777777cccccccccccccccccc66566655
55556666cccccccccccccccccccccccccccccccc766566665666566566665667ccccccccccccccccccccccccccc666677777776ccccccccccccccccc66555555
55555555ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc66777767777777ccccccccccccccccc55555555
66555567ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc77777776777777ccccccccccccccccc76555665
66555566ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc7777777677777cccccccccccccccccc66555665
55555566ccccccccccccccccccccccccccccc33333333cccccccccccccccccccccccccccccccccccccccccccc77777777777666ccccccccccccccccc66555555
55555555cccccccccccccccccccccccccccc3377777773ccccccccccccccccccccccccccccccccccccccccccc777777777777776cccccccccccccccc55555555
55555667ccccccccccccccccccccccccccc337777777773c33333ccccc33333333333cccccccccccccccccccc777777777777777cccccccccccccccc76655555
56556667ccccccccccccccccccccccccccc37777777777733777733333377777777733333333333ccccc3333333377777777777ccccccccccccccccc76665565
55556666ccccccccccccccccccccccccccc377733333777337777333333777777777377773777733333377777773cccccccccccccccccccccccccccc66665555
55555555cccccccccccccccccccccccccc3377733333777337777333333777733377377773777777777377777773cccc76657766576557655765576555555555
66555567cccccccccccccccccccccccccc3777733333777737777333333777733377377773777777777377777773cccc66656666566556655665566555555565
66555566cccccccccccccccccccccccccc3777733333777737777333333777733377377773777777777377733333cccc66656666555556655555566556555555
55555566cccccccccccccccccccccccccc37777333337777377773333337777333773777737777337773777333cccccc66656666577656655776566555566555
55555555cccccccccccccccccccccccccc37777777777777377773333337777777773777737777337773777773cccccc55555555566655555666555555566555
55555667cccccccccccccccccccccccccc37777777777777377773333337777777773777737777337773777773cccccc76665555566655555666555555555555
56556667cccccccccccccccccccccccccc37777333337777377773333337777333333777737777337773777333cccccc66665555555555655555556556655565
55556666cccccccccccccccccccccccccc3777733333777737777777773777733333377773777733777377733333cccc66665555555555555555555555555555
55555555cccccccccccccccccccccccccc3777733333777737777777773777733333377773777733777377777773cccc55555555555555555555555555555555
66555567cccccccccccccccccccccccccc3777733333777737777777773777733333377773777733777377777773cccc76555665555555555555555555555555
66555566cccccccccccccccccccccccccc3777733333777737777777773777733333377773777733777377777773cccc66555665555555555555555555555555
55555566cccccccccccccccccccccccccc3333333333333333333333333333333333333333333333333333333333cccc66555555555555555555555555555555
55555555ccccccccccccccccccccccccccccccccc6337773333377777333777773337777733737777333733ccccccccc55555555555555555555555555555555
55555667ccccccccccccccccccccccccccccccc663373337333733333737333337373333373773333737773ccccccccc76655555555555555555555555555555
56556667ccccccccccccccccccccccccccccccc773733337333733333337333333373333373733333733733ccccccccc76665565555555555555555555555555
55556666ccccccccccccccccccccccccccc666677373333733337777733733333337777773373333373373cccccccccc66665555555555555555555555555555
55555555ccccccccccccccccccccccccc66777767373333733333333373733333337333333373333373373cccccccccc55555555555555555555555555555555
66555567ccccccccccccccccccccccccc777777763373337333733333737333337373333373733333733733ccccccccc76666555566555655555555555555555
66555566ccccccccccccccccccccccccc777777767337773773377777333777773337777733733333733773ccccccccc76666555566555555555555555555555
55555566ccccccccccccccccccccccccc777777777733333333333333333333333333333333333333333333ccccccccc66665565555555555555555555555555
55555555ccccccccccccccccccccccccc777777777777776cccccccccccccccccccccccccccccccccccccccccccccccc55555555556565555555555555555555
55555667ccccccccccccccccccccccccc777777777777777cccccccccccccccccccccccccccccccccccccccccccccccc76576555555555555555555555555555
56556667cccccccccccccccccccccccccc7777777777777ccccccccccccccccccccccccccccccccccccccccccccccccc66566655565556655555555555555555
55556666cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc66555555555555555555555555555555
555555555776576656775667cccccccccccccccc7665776657765766577657665776576656775667cccccccccccccccc55555555555555555555555555555555
665555675666566656665666cccccccccccccccc6665666656665666566656665666566656665666cccccccccccccccc76555665555555655555555555555555
665555665666555556665666cccccccccccccccc6665666656665555566655555666555556665666cccccccccccccccc66555665565555555555555555555555
555555665666576656665666cccccccccccccccc6665666656665766566657665666576656665666cccccccccccccccc66555555555665555555555555555555
555555555555566655555555cccccccccccccccc5555555555555666555556665555566655555555cccccccccccccccc55555555555665555555555555555555
555556675555555555556667cccccccccccccccc7666555555555555555555555555555555556667cccccccccccccccc76655555555555555555555555555555
565566675655665555556666cccccccccccccccc6666555556556655565566555655665555556666ccc66666cccccccc76665565566555655555555555555555
555566665555665555556666cccccccccccccccc6666555555556655555566555555665555556666cc6777776ccccccc66665555555555555555555555555555
555555555555555555555555cccccccccccccccc5555555555555555555555555555555555555555c6777777766666cc66665665555555555555555555555555
555555555555566555566667cccccccccccccccc7655566555555665555555555555566566555567c77777776777777cc6655665555555655555556555555555
555555555665566555566667cccccccccccccccc6655566556655665555555555665566566555566c777777677777776cc576555565555555655555555555555
555555555555555556556666cccccccccaa3333c6655555555555555555555555555555555555566cc7777777777777cccc66655555665555556655555555555
555555555565555555555555cccccccccc3a33335555555555655555555555555565555555555555ccc77777777777cccccc6656555665555556655555555555
555555555555665555567567cccccccccc44ff5c7665555555556655555555555555665555555667cccc777777777cccccccc576555555555555555555555555
555555555655665555666566cccccccccc4ff4ff7666556556556655555555555655665556556667cccccccccccccccccccccc76566555655665556555555555
555555555555555555555566cccccccccccfff4c6666555555555555555555555555555555556666ccccccccccccccccccccccc6555555555555555555555555
555555555555555555555555ccccccccccc3377b5555555555555555555555555555555555555555cccccccccccccccccccccccc666656655555555555555555
555555555665556566555567ccccccccccc333347655566555555555555555555555555555566667ccccccccccccccccccccccccc66556655555556556655565
555555555665555566555566cccccccccccc33cc6655566555555555555555555555555555566667cccccccccccccccccccccccccc5765555655555556655555
555555555555555555555566cccccccccccccccc6655555555555555555555555555555556556666ccccccccccccccccccccccccccc666555556655555555555
555555555565655555555555cccccccccccccccc5555555555555555555555555555555555555555cccccccccccccccccccccccccccc66565556655555656555
555555555555555555555667cccccccccccccccc7665555555555555555555555555555555567567ccccccccccccccccccccccccccccc5765555555555555555
555555555655566556556667cccccccccccccccc7666556555555555555555555555555555666566cccccccccccccccccccccccccccccc765665556556555665
555555555555555555556666cccccccccccccccc6666555555555555555555555555555555555566ccccccccccccccccccccccccccccccc65555555555555555
555555555555555555555555cccccccccccccccc5555555555555555555555555555555555555555cccccccccccccccccccccccccccccccc6666566555555555
555555555555556556655567cccccccccccccccc7655566555555555555555555555555566555567ccccccccccccccccccccccccccccccccc665566555555565
555555555655555556655566cccccccccccccccc6655566555555555555555555555555566555566cccccccccccccccccccccccccccccccccc57655556555555
555555555556655555555566cccccccccccccccc6655555555555555555555555555555555555566ccccccccccccccccccccccccccccccccccc6665555566555
555555555556655555555555cccccccccccccccc5555555555555555555555555555555555555555cccccccccccccccccccccccccccccccccccc665655566555
555555555555555555556667cccccccccccccccc7665555555555555555555555555555555555667ccccccccccccccccccccccccccccccccccccc57655555555
555555555665556556556667cccccccccccccccc7666556555555555555555555555555556556667cccccccccccccccccccccccccccccccccccccc7656655565
555555555555555555556666cccccccccccccccc6666555555555555555555555555555555556666ccccccccccccccccccccccccccccccccccccccc655555555
555555555555555566556666cccccccccccccccc5555555555555555555555555555555555555555cccccccccccccccccccccccccccccccccccccccc55555555
55555555566555656656566ccccccccccccccccc7655566555555665555555555555566555566667cccccccccccccccccccccccccccccccccccccccc76555665
5555555556655555556675cccccccccccccccccc6655566556655665555555555665566555566667cccccccccccccccccccccccccccccccccccccccc66555665
555555555555555556666ccccccccccccccccccc6655555555555555555555555555555556556666cccccccccccccccccccccccccccccccccccccccc66555555
55555555556565556566cccccccccccccccccccc5555555555655555555555555565555555555555cccccccccccccccccccccccccccccccccccccccc55555555
5555555555555555675ccccccccccccccccccccc7665555555556655555555555555665555567567cccccccccccccccccccccccccccccccccccccccc76655555
555555555655566567cccccccccccccccccccccc7666556556556655555555555655665555666566cccccccccccccccccccccccccccccccccccccccc76665565
55555555555555556ccccccccccccccccccccccc6666555555555555555555555555555555555566cccccccccccccccccccccccccccccccccccccccc66665555
5555555566556666cccccccccccccccccccccccc6666566555556555555565555555655566556666cccccccccccccccccccccccccccccccccccccccc55555555
665555676656566cccccccccccccccccccccccccc66556655555556655555566555555666656566ccccccccccccccccccccccccccccccccccccccccc76555665
66555566556675ccccccccccccccccccccccccccc7576555566555665665556656655566556675cccccccccccccccccccccccccccccccccccccccccc66555665
5555556656666ccccccccccccccccccccccccccccc76665556655555566555555665555556666ccccccccccccccccccccccccccccccccccccccccccc66555555
555555556566ccccccccccccccccccccccccccccccc766565555576555555765555557656566ccccc666cccccccccccccccccccccccccccccccccccc55555555
55555667675ccccccccccccccccccccccccccccccccc7576555556655555566555555665675cccc6677766cccccccccccccccccccccccccccccccccc76655555
5655666767cccccccccccccccccccccccccccccccccccc7657665665576656655766566567ccccc7777777cccccccccccccccccccccccccccccccccc76665565
555566666cccccccccccccccccccccccccccccccccccccc65666566556665665566656656cc666677777776ccccccccccccccccccccccccccccccccc66665555
55555555ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc66777767777777ccccccccccccccccccccccccccccccccc55555555
55566667ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc77777776777777ccccccccccccccccccccccccccccccccc76555665
55566667ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc7777777677777cccccccccccccccccccccccccccccccccc66555665
56556666ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc77777777777666ccccccccccccccccccccccccccccccccc66555555
55555555ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc777777777777776cccccccccccccccccccccccccccccccc55555555
55567567ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc777777777777777cccccccccccccccccccccccccccccccc76655555
55666566cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc7777777777777ccccccccccccccccccccccccccccccccc76665565
55555566cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc66665555
55555555cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc55555555
66555567cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc76666555
66555566cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc76666555

__gff__
0003030101010b0b034081030781040400030301201010880003030303070700000300000010108800880301030707000000000000000088000301010103880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
1301000000000000000000000000020303010000000000000000000000002a0306000000002a2b2c00000000000613131100000000000000000000000000021311000000000000000000000000000002110000000000000000000000000000021100000000000000000000000000001200000000000000000000000000000000
0311000000000000000000000000121313010000000000000000000000002a13060000000002230100000000000603030100000000000000000000000000120311000000000000000000000000000012010000000000000000000000000000120100000000000000000000000000000200000000000000000000000000000000
130100000000000000000000000002030311000000000000000000000000060306000000001223110000000000061313110000000000000000000000000002132c00000000000000000000000000002a110000000000000000000000000000021100000000000000000000000000001200000000001f000000001f0000000000
031100000000000000000000000012131306000000000000000000000000061306000000000623010000000000060303010000000000000000000000000012032d00000000000000000000000000002e2c00000000000000000000000000002a0100000000000000000000000000000200000000000000000000000000000000
130100000000000000000000000002030306000000000000000000000000060306000000000623110000000000061303110000000000000000000000000002131d00000000000000000000000000001e2d00000000000000000000000000001e1100000000000018000000000000001200000000000000000000000000000f00
031100000000000000000000000012131306000006060000000000000000061306000000000623010000000000060313060000002100000000000021000006032d00000000000000000000000000002e1d00000000000000000000000000002e01000000000000280000000000000002000000000000001f0000000000000000
13010000000000000000000000000203030100000606000000000000000005030600000000063b3d0000000000061303060000000000000000000000000006131d00000000000000001a1b1c0000001e2d00000000000000000000000000001e1100000000000038000000000000001200000000000000000000000000000000
031100000000001a1b1b1c00000012131301000006060000000000000000002a06000000000000000000000000061313060000000000000000000000000006032d00000000000000002a0a2c0000002e1d00000000000a0a000000000000002e0100000000001a1b1b1c00000000000200000000000000000000000000000000
130100000000002a03032c00001a030303110000000000000000000000000012060000000000000000000000000603030600000000001a1c00000000000006131d0000000000000000393b3d0000001e2d00000000000a0a000000000000001e1100000000002a23232c000000000012000000000000000000001f0000000000
131100000000003a03033c00002a030323231b0606061b1c000000000000002a0600001a1c00001a1b1b1c0000061313060000000000393d00000000000006032d00000000000000000000000000002e1d00000000001e2d000000000000002e1100000000002a23232c00000000001200000000000000000000000000000000
03010000000000003a3c0000003a030323232306060623010000000000000002060000120100002a3b3b2c0000060303060000000000000000002100000006131d00000000000000000000000000001e2d00000000002e1d000000000000001e010000001a1b232323231b1c0000000200000000000f00000000000000000000
133c0000000000000000000000003a232323232323232311000000000000002a0600002a2c0000000000000000061313060000000000000000000000000006032d00000000000000000000000000002e1d00000000001e2d000000000000002e110000002a2323232323232c0000001200000000000000000000001f00000000
2c00000000000000000000000000002a23232306232323010000000000000012060000393d0000000000000000060303060000210000000000000000000006131d00000000000000000000000000001e2d00000000002e1d000000000000001e0100001a1a232323232323231c00000200000000000000000000000000000000
1100001a1c000000000000000000002a2323060623232311000000000000000206000000000000000000000000061313060000000000000000000000000006032d00002100000000000000000000002e1d00000000001e2d000000000000002e1100002a23232323232323232c00001200000000000000000000000000000000
1100001201000000000000000000002a2323060623232301000000000000000206000000000000000000000000060303060000000000000000002100000006131d00000000000000000000000000001e2d0000000000393d000000000000001e1100002a23232323232323232c00001200000000000000000000000000001f00
010000022c00000000000000000000122323060623232306000000000000001206000000000000000000000000061313060000001a1c000000000000000006032d00000000000000000000000000002e1d00000000000000000000000000002e0100002a23232323232323232c00000200000000000000000000000000000000
11000005040000000000000000000002232323232323230600000000000000020600001a1c000000000000000006030306000000393d000000000000000006131d00000000000000000000000000001e2d000000000a0000000000000a00001e1100003a3b3b3b3b3b3b3b3b3c00001200000000000000001f00000000000000
0100000000001a1b1b1c0000000000122323232323232306000000000000002a06000012010000000000000000061313060000000000000000001a1c000006032d00000000000000000000000000002e1d00000000000000000000000000002e010000000000000000000000000000020000000000000000000000000f000000
1100000000000203130100000000001223232323232323060000000000001a130600002a2c0000000000060000062b0306000000000000000000393d000006131d00000000000000000000000000001e2d00000000000000000000000000001e1100000000000000000000000000001200000000000000000000000000000000
0100000000002a13031100000000000223132323232303110000000000001203060000393d0000000000060000061313060000000000000000000000000006032d00000000001a1b1c0000000000002e1d00000000000000000000000000002e1100000000000000000000000000001200000000000f00000000000000000000
0100000000003a3b3b3d00000000000223030606060606010000000000002a1306000000000000000000060000060303060000000000210000000000000006131d00000000001e232d0000000000001e2d00000000210000000000000000001e0100000000000000000000000000000200000000000000001f00000000000000
110000000000000000000000000000122313060000000611000000000000021306000000000000000000060000061313060000000000000000000000000006032d00000000002e231d0000000000002e1d00000000000000000000000000002e1100001a1c00000000001a1c0000001200000000000000000000000000000000
010000000000000000000000000000022313060000000601000000000000060306000000000000000000060000060303060000000000000000000000000006131d00000000001e232d0000000000001e2d000000000000000a0a00000000001e010000393d0000000000393d000000020000000000000000000000001f00001f
11000000000000000000000000000002230306000000063d000000000000061306000006061c00000000060000061313060000001a1c000000002100000006032d00000000002e230a0000000000002e1d000000000000000a0a00000000002e1100000000000000000000000000001200000000000000000000000000000000
010000000000000000000000000000122313010000000000000000000000061306000006062c0000000006000006030306000000393d000000000000000006131d00000000001e0a0a0000000000001e2d000000000000001e2d00000000001e1100000000000000000000000000001200000000000000000000000000000000
010000000000000000000000000000022313110000000000000000000000060306000006060100000000060000061313060000000000000000000000000006032d00000000000a0a1d0000000000002e1d000000000000002e1d00000000002e010000001a1b1b1c000000000000000200001f0000001f000000000000000000
1100000000000000000000000000000223030100000000000000060600001213060000393b3d00000000060000060303060000000000000021000000000006131d00000000000a232d0000000000001e2d000000000000001e2d00000000001e110000002a23232c0000000000000012000000000000000000000f0000001f00
010000000000000000000000000000122313110000000000000006060000022306000000000000000000060000061313060000000000000000000000000006032d00000000002e231d0000000000002e1d000000000000002e1d00000000002e010000002a23232c000000000000000200000000000000000000000000000000
010000000000000000000000000000022303110000000000000000000000122306000000000000000000060000060303060000001a1c000000000000000006131d00000000001e232d0000000000001e2d000000000000001e2d00000000001e11000000393b3b3d000000000000001200000000000000000000000000000000
11000000000000000000000000000002231301000000000000000000000002230600000000000000000006000006131306000000393d000000000000000006032d0000000000393b3d0000000000002e1d00000a0a000000393d00000000002e11000000000000000000000000000012000000001f00000000001f0000000000
010000000000000000000000000000020303110000000000000000000000122306000000001a1b1c0000060000060303060000000000000000000000000006131d00000000000000000000000000001e2d00000a0a000000000000000000001e0100000000000000000000000000000200000000000000000000000000000000
01000000000000000000000000000002231301000000000000001a1c0000022306000000002a062c0000060000061313060000000000000000210000000006030a00000000000000000000000000002e1d00001e2d000000000000000000002e1100000000000000000000000000001200000000000000000000000000001f00
__sfx__
010300000e34011340133401534018340193401b34000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000
010100000765005650036500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010300002b0502c0502d0502e0502f050310503105030050300502f0502e0502c0502905025050230500000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010300003104033040350400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
012500000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c000
012500000012000000071000710007120071000710000000001200000007100071000712007100071000000000120000000710007100071200710007100000000012000000071000710007120071000710000000
012500000b1200000004120071000b1200000004120071000b1200000004120071000b1200000004120071000b1200000004120071000b1200000004120071000b1200000004120071000b120000000412007100
0125000024750247502475024750237502375023750237501f7501f750237501c75018750007001875018750237501f7501c7502375000700187001875018750237501f7501c7501875000700007000070000700
012500002475524705237552370524755247051f7551f7052475524755237552375524755247551c7551c7052475524705237552370524755247051f7551f7052475524755237552375524755247551c7551c705
01250000000022472224702237222370224722247021f7221f7022472224702237222370224722247021c7221c7022472224702237222370224722247021f7221f7022472224702237222370224722247021c722
012500000000024712247122471224712237122371223712237121f7121f712237121c71218712007021871218712237121f7121c7122371200702187021871218712237121f7121c71218712007020070200702
011e00000712000000071000710005120071000710000000081200000007100071000612007100071000000007120000000710007100051200710007100000000812000000071000710006120071000710000000
011e00000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c0000c0130c6000c6130c000
011e0020155441854400504155441c544005041554410544185441c54400504185441f5440050418544155441c5441f544005041c54423544005041c54418544185441c54400504185441f544005041854415544
011e00001f55600006185560000611556000060a556000062055601006195560100612556010060b556010061f55600006185560000611556000060a556000062055601006195560100612556010060b55601006
011e00000754307533075230751300503005030050300503085430853308523085130050300503005030050307543075330752307513005030050300503005030854308533085230851300503005030050300503
__music__
01 04054744
00 04050809
00 0405070a
00 04050809
02 04054944
00 0c0b4344
01 0c0b0f44
00 0c0b0f0e
00 0c0b0f0e
02 0c0b0f4e

